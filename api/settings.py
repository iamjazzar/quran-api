"""
Django settings for api project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path

import dj_database_url
from django.core.management.utils import get_random_secret_key

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_random_secret_key()

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third-party libraries
    "django_elasticsearch_dsl",
    "django_elasticsearch_dsl_drf",
    "rest_framework",
    "hitcount",
    # Our apps
    "quran",
    "search",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "api.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "api.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases
DATABASES = {
    "default": dj_database_url.config(
        default="postgres://quran:quran@db:5432/quran",
        conn_max_age=600,
    )
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

_AUTH_PASSWORD_VALIDATORS_BASE = "django.contrib.auth.password_validation"
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": f"{_AUTH_PASSWORD_VALIDATORS_BASE}.UserAttributeSimilarityValidator",
    },
    {
        "NAME": f"{_AUTH_PASSWORD_VALIDATORS_BASE}.MinimumLengthValidator",
    },
    {
        "NAME": f"{_AUTH_PASSWORD_VALIDATORS_BASE}.CommonPasswordValidator",
    },
    {
        "NAME": f"{_AUTH_PASSWORD_VALIDATORS_BASE}.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Hit count settings
# This is the number of days, weeks, months, hours, etc (using a timedelta keyword
# argument), that a Hit is kept active. If a Hit is active a repeat viewing will not
# be counted. After the active period ends, however, a new Hit will be recorded. You
# can decide how long you want this period to last and it is probably a matter of
# preference.
HITCOUNT_KEEP_HIT_ACTIVE = {"days": 7}
# Limit the number of active Hits from a single IP address. 0 means that it
# is unlimited.
HITCOUNT_HITS_PER_IP_LIMIT = 0
# Exclude Hits from all users in the specified user groups. By default, this is set
# to an empty list (all users counted).
HITCOUNT_EXCLUDE_USER_GROUP = ()
# Hits remain in the database indefinitely unless you run the hitcount_cleanup
# management command. This setting specifies a timedelta within which to keep/save
# Hits. Any Hit older than the time specified will be removed from the Hits table.
HITCOUNT_KEEP_HIT_IN_DATABASE = {"days": 30}

# Django REST framework
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.AllowAny",),
    # For more info about API versioning, visit:
    # https://www.django-rest-framework.org/api-guide/versioning/#namespaceversioning
    "DEFAULT_VERSIONING_CLASS": "rest_framework.versioning.NamespaceVersioning",
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.CursorPagination",
    "COERCE_DECIMAL_TO_STRING": False,
    "PAGE_SIZE": 100,
}

if not DEBUG:
    REST_FRAMEWORK["DEFAULT_RENDERER_CLASSES"] = [
        "rest_framework.renderers.JSONRenderer",
    ]


# Elastic search
ELASTICSEARCH_DSL = {
    "default": {"hosts": "elasticsearch:9200"},
}


# Logging
if not DEBUG:
    LOGGING = {
        "version": 1,
        "disable_existing_loggers": False,
        "root": {
            "level": "INFO",
            "handlers": ["console"],
        },
        "formatters": {
            "verbose": {
                "format": (
                    "{levelname} {asctime} {module} {process:d} {thread:d} {message}"
                ),
                "style": "{",
            },
            "simple": {
                "format": "{levelname} {message}",
                "style": "{",
            },
        },
        "handlers": {
            "console": {
                "level": "INFO",
                "class": "logging.StreamHandler",
                "formatter": "simple",
            },
            "email_admin": {
                "level": "ERROR",
                "class": "django.utils.log.AdminEmailHandler",
                "formatter": "verbose",
            },
        },
        "loggers": {
            "django": {
                "handlers": ["console"],
                "propagate": True,
            },
            "django.db.backends": {
                "level": "ERROR",
                "handlers": ["console", "email_admin"],
                "propagate": False,
            },
            "django.request": {
                "handlers": ["console", "email_admin"],
                "level": "ERROR",
                "propagate": False,
            },
            "django.security.DisallowedHost": {
                "level": "ERROR",
                "handlers": ["console", "email_admin"],
                "propagate": False,
            },
        },
    }
